// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231025032241_NewOne")]
    partial class NewOne
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Backend.Data.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsBarmen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShishaMaster")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            FirstName = "murat",
                            IsBarmen = false,
                            IsShishaMaster = false,
                            PasswordHash = new byte[] { 239, 0, 5, 71, 31, 200, 197, 19, 136, 169, 253, 9, 66, 8, 32, 179, 112, 216, 88, 49, 240, 34, 63, 160, 99, 164, 213, 0, 124, 107, 5, 125, 68, 176, 8, 84, 220, 244, 84, 48, 255, 74, 252, 203, 83, 191, 182, 46, 154, 141, 172, 84, 71, 206, 215, 189, 235, 35, 97, 230, 10, 240, 114, 73 },
                            PasswordSalt = new byte[] { 22, 150, 15, 38, 48, 185, 132, 246, 142, 245, 175, 126, 139, 0, 127, 196, 118, 227, 192, 130, 14, 98, 254, 33, 16, 23, 236, 101, 139, 231, 213, 193, 142, 0, 64, 62, 20, 177, 6, 227, 62, 30, 176, 119, 57, 203, 111, 239, 145, 178, 58, 4, 93, 234, 71, 100, 216, 132, 173, 126, 15, 107, 19, 76, 48, 18, 179, 230, 155, 55, 255, 123, 143, 243, 91, 217, 235, 45, 217, 204, 168, 143, 111, 153, 128, 28, 79, 210, 146, 36, 52, 238, 191, 31, 91, 17, 248, 162, 29, 226, 96, 99, 224, 164, 195, 84, 56, 172, 170, 121, 13, 167, 199, 63, 127, 248, 107, 237, 209, 38, 110, 99, 46, 6, 83, 49, 37, 117 },
                            Role = "Manager",
                            Surname = "muldashev"
                        });
                });

            modelBuilder.Entity("Backend.Data.Entities.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("DateOfShift")
                        .HasColumnType("date");

                    b.Property<int>("DayNum")
                        .HasColumnType("integer");

                    b.Property<int>("TimeStart")
                        .HasColumnType("integer");

                    b.Property<int>("WeekNum")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Backend.Data.Entities.Shift", b =>
                {
                    b.HasOne("Backend.Data.Entities.AppUser", "AppUser")
                        .WithOne("Shift")
                        .HasForeignKey("Backend.Data.Entities.Shift", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Backend.Data.Entities.AppUser", b =>
                {
                    b.Navigation("Shift");
                });
#pragma warning restore 612, 618
        }
    }
}
