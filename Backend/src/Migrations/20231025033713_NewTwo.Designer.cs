// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231025033713_NewTwo")]
    partial class NewTwo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Backend.Data.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsBarmen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShishaMaster")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            FirstName = "murat",
                            IsBarmen = false,
                            IsShishaMaster = false,
                            PasswordHash = new byte[] { 25, 145, 204, 95, 205, 127, 232, 12, 70, 23, 39, 74, 9, 33, 93, 159, 206, 52, 19, 75, 24, 21, 70, 40, 2, 76, 102, 221, 34, 62, 238, 30, 190, 167, 202, 195, 182, 119, 169, 100, 240, 80, 112, 161, 215, 189, 91, 43, 251, 179, 91, 219, 141, 50, 52, 104, 173, 6, 17, 249, 244, 227, 82, 29 },
                            PasswordSalt = new byte[] { 177, 87, 99, 225, 222, 181, 72, 176, 145, 5, 187, 61, 104, 135, 111, 11, 230, 226, 173, 246, 49, 248, 189, 175, 199, 45, 122, 205, 195, 109, 223, 47, 15, 248, 181, 225, 38, 92, 167, 216, 179, 170, 142, 239, 85, 167, 52, 87, 163, 104, 200, 155, 117, 201, 203, 61, 206, 82, 100, 168, 215, 214, 75, 61, 49, 238, 109, 3, 98, 35, 218, 55, 179, 204, 131, 162, 54, 64, 168, 200, 78, 246, 42, 210, 214, 55, 96, 103, 243, 104, 40, 104, 94, 190, 106, 215, 201, 98, 42, 178, 142, 69, 97, 212, 37, 51, 19, 24, 155, 178, 135, 232, 133, 134, 56, 103, 208, 242, 53, 98, 87, 94, 168, 224, 239, 237, 160, 37 },
                            Role = "Manager",
                            Surname = "muldashev"
                        });
                });

            modelBuilder.Entity("Backend.Data.Entities.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("DateOfShift")
                        .HasColumnType("date");

                    b.Property<int>("DayNum")
                        .HasColumnType("integer");

                    b.Property<int>("TimeStart")
                        .HasColumnType("integer");

                    b.Property<int>("WeekNum")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Backend.Data.Entities.Shift", b =>
                {
                    b.HasOne("Backend.Data.Entities.AppUser", "AppUser")
                        .WithMany("Shift")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Backend.Data.Entities.AppUser", b =>
                {
                    b.Navigation("Shift");
                });
#pragma warning restore 612, 618
        }
    }
}
